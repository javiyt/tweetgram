on: [ push, pull_request ]
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.19.x]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3.3.1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Generate env file
        run: 'echo "$ENV_FILE" > cmd/env'
        shell: bash
        env:
          ENV_FILE: ${{secrets.ENV}}
      - name: Generate env.test file
        run: 'echo "$ENV_TEST_FILE" > cmd/env.test'
        shell: bash
        env:
          ENV_TEST_FILE: ${{secrets.ENV_TEST}}
      - name: Install Task
        uses: arduino/setup-task@1.0.2
        with:
          version: 3.11.0
      - name: Test
        run: task test
      - name: Upload report to Codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true
          files: coverage.txt
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3.3.1
        with:
          go-version: 1.19.1
      - uses: actions/checkout@v3
      - name: Generate env file
        run: 'echo "$ENV_FILE" > cmd/env'
        shell: bash
        env:
          ENV_FILE: ${{secrets.ENV}}
      - name: Generate env.test file
        run: 'echo "$ENV_TEST_FILE" > cmd/env.test'
        shell: bash
        env:
          ENV_TEST_FILE: ${{secrets.ENV_TEST}}
      - name: Install Task
        uses: arduino/setup-task@1.0.2
        with:
          version: 3.11.0
      - name: Generate code
        run: task generate
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.3.1
        with:
          version: v1.50.0
          skip-pkg-cache: true
          skip-go-installation: true
          skip-build-cache: true